#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TLTDatabaseEditor
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TLT_Inventory")]
	public partial class DatabaseConnectionManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuilding(Building instance);
    partial void UpdateBuilding(Building instance);
    partial void DeleteBuilding(Building instance);
    #endregion
		
		public DatabaseConnectionManagerDataContext() : 
				base(global::TLTDatabaseEditor.Properties.Settings.Default.TLT_InventoryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Building> Buildings
		{
			get
			{
				return this.GetTable<Building>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Building")]
	public partial class Building : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingID;
		
		private string _BuildingName;
		
		private string _BuildingCode;
		
		private System.Nullable<bool> _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingIDChanging(int value);
    partial void OnBuildingIDChanged();
    partial void OnBuildingNameChanging(string value);
    partial void OnBuildingNameChanged();
    partial void OnBuildingCodeChanging(string value);
    partial void OnBuildingCodeChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public Building()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this.OnBuildingIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingID = value;
					this.SendPropertyChanged("BuildingID");
					this.OnBuildingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", DbType="VarChar(255)")]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this.OnBuildingNameChanging(value);
					this.SendPropertyChanging();
					this._BuildingName = value;
					this.SendPropertyChanged("BuildingName");
					this.OnBuildingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingCode", DbType="VarChar(255)")]
		public string BuildingCode
		{
			get
			{
				return this._BuildingCode;
			}
			set
			{
				if ((this._BuildingCode != value))
				{
					this.OnBuildingCodeChanging(value);
					this.SendPropertyChanging();
					this._BuildingCode = value;
					this.SendPropertyChanged("BuildingCode");
					this.OnBuildingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
