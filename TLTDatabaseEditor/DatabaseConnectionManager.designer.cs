#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TLTDatabaseEditor
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TLT_Inventory")]
	public partial class DatabaseConnectionManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBuilding(Building instance);
    partial void UpdateBuilding(Building instance);
    partial void DeleteBuilding(Building instance);
    partial void InsertClassroomFeatureDesc(ClassroomFeatureDesc instance);
    partial void UpdateClassroomFeatureDesc(ClassroomFeatureDesc instance);
    partial void DeleteClassroomFeatureDesc(ClassroomFeatureDesc instance);
    partial void InsertFeatureDesc(FeatureDesc instance);
    partial void UpdateFeatureDesc(FeatureDesc instance);
    partial void DeleteFeatureDesc(FeatureDesc instance);
    partial void InsertControlType(ControlType instance);
    partial void UpdateControlType(ControlType instance);
    partial void DeleteControlType(ControlType instance);
    partial void InsertTypeDesc(TypeDesc instance);
    partial void UpdateTypeDesc(TypeDesc instance);
    partial void DeleteTypeDesc(TypeDesc instance);
    partial void InsertClassroom(Classroom instance);
    partial void UpdateClassroom(Classroom instance);
    partial void DeleteClassroom(Classroom instance);
    #endregion
		
		public DatabaseConnectionManagerDataContext() : 
				base(global::TLTDatabaseEditor.Properties.Settings.Default.TLT_InventoryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseConnectionManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Building> Buildings
		{
			get
			{
				return this.GetTable<Building>();
			}
		}
		
		public System.Data.Linq.Table<ClassroomFeatureDesc> ClassroomFeatureDescs
		{
			get
			{
				return this.GetTable<ClassroomFeatureDesc>();
			}
		}
		
		public System.Data.Linq.Table<FeatureDesc> FeatureDescs
		{
			get
			{
				return this.GetTable<FeatureDesc>();
			}
		}
		
		public System.Data.Linq.Table<BuildingQuery> BuildingQueries
		{
			get
			{
				return this.GetTable<BuildingQuery>();
			}
		}
		
		public System.Data.Linq.Table<ClassroomQuery> ClassroomQueries
		{
			get
			{
				return this.GetTable<ClassroomQuery>();
			}
		}
		
		public System.Data.Linq.Table<ClassroomFeatureDescQuery> ClassroomFeatureDescQueries
		{
			get
			{
				return this.GetTable<ClassroomFeatureDescQuery>();
			}
		}
		
		public System.Data.Linq.Table<vBuildingRoomFeature> vBuildingRoomFeatures
		{
			get
			{
				return this.GetTable<vBuildingRoomFeature>();
			}
		}
		
		public System.Data.Linq.Table<ControlType> ControlTypes
		{
			get
			{
				return this.GetTable<ControlType>();
			}
		}
		
		public System.Data.Linq.Table<TypeDesc> TypeDescs
		{
			get
			{
				return this.GetTable<TypeDesc>();
			}
		}
		
		public System.Data.Linq.Table<Classroom> Classrooms
		{
			get
			{
				return this.GetTable<Classroom>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Building")]
	public partial class Building : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingID;
		
		private string _BuildingName;
		
		private string _BuildingCode;
		
		private System.Nullable<bool> _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingIDChanging(int value);
    partial void OnBuildingIDChanged();
    partial void OnBuildingNameChanging(string value);
    partial void OnBuildingNameChanged();
    partial void OnBuildingCodeChanging(string value);
    partial void OnBuildingCodeChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public Building()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this.OnBuildingIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingID = value;
					this.SendPropertyChanged("BuildingID");
					this.OnBuildingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", DbType="VarChar(255)")]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this.OnBuildingNameChanging(value);
					this.SendPropertyChanging();
					this._BuildingName = value;
					this.SendPropertyChanged("BuildingName");
					this.OnBuildingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingCode", DbType="VarChar(255)")]
		public string BuildingCode
		{
			get
			{
				return this._BuildingCode;
			}
			set
			{
				if ((this._BuildingCode != value))
				{
					this.OnBuildingCodeChanging(value);
					this.SendPropertyChanging();
					this._BuildingCode = value;
					this.SendPropertyChanged("BuildingCode");
					this.OnBuildingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassroomFeatureDesc")]
	public partial class ClassroomFeatureDesc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeatureDescID;
		
		private string _RoomNumber;
		
		private int _BuildingID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureDescIDChanging(int value);
    partial void OnFeatureDescIDChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnBuildingIDChanging(int value);
    partial void OnBuildingIDChanged();
    #endregion
		
		public ClassroomFeatureDesc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureDescID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FeatureDescID
		{
			get
			{
				return this._FeatureDescID;
			}
			set
			{
				if ((this._FeatureDescID != value))
				{
					this.OnFeatureDescIDChanging(value);
					this.SendPropertyChanging();
					this._FeatureDescID = value;
					this.SendPropertyChanged("FeatureDescID");
					this.OnFeatureDescIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this.OnBuildingIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingID = value;
					this.SendPropertyChanged("BuildingID");
					this.OnBuildingIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeatureDesc")]
	public partial class FeatureDesc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeatureDescID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureDescIDChanging(int value);
    partial void OnFeatureDescIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public FeatureDesc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureDescID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeatureDescID
		{
			get
			{
				return this._FeatureDescID;
			}
			set
			{
				if ((this._FeatureDescID != value))
				{
					this.OnFeatureDescIDChanging(value);
					this.SendPropertyChanging();
					this._FeatureDescID = value;
					this.SendPropertyChanged("FeatureDescID");
					this.OnFeatureDescIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class BuildingQuery
	{
		
		private string _BuildingID;
		
		private string _BuildingName;
		
		private string _BuildingCode;
		
		private string _Enabled;
		
		public BuildingQuery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", CanBeNull=false)]
		public string BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this._BuildingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", CanBeNull=false)]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this._BuildingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingCode", CanBeNull=false)]
		public string BuildingCode
		{
			get
			{
				return this._BuildingCode;
			}
			set
			{
				if ((this._BuildingCode != value))
				{
					this._BuildingCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", CanBeNull=false)]
		public string Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this._Enabled = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ClassroomQuery
	{
		
		private string _RoomNumber;
		
		private string _BuildingID;
		
		private string _Enabled;
		
		public ClassroomQuery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", CanBeNull=false)]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this._RoomNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", CanBeNull=false)]
		public string BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this._BuildingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", CanBeNull=false)]
		public string Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this._Enabled = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ClassroomFeatureDescQuery
	{
		
		private string _FeatureDescID;
		
		private string _RoomNumber;
		
		private string _BuildingID;
		
		public ClassroomFeatureDescQuery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureDescID", CanBeNull=false)]
		public string FeatureDescID
		{
			get
			{
				return this._FeatureDescID;
			}
			set
			{
				if ((this._FeatureDescID != value))
				{
					this._FeatureDescID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", CanBeNull=false)]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this._RoomNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", CanBeNull=false)]
		public string BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this._BuildingID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vBuildingRoomFeatures")]
	public partial class vBuildingRoomFeature
	{
		
		private string _BuildingName;
		
		private string _BuildingCode;
		
		private int _BuildingID;
		
		private string _RoomNumber;
		
		private string _Description;
		
		public vBuildingRoomFeature()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", DbType="VarChar(255)")]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this._BuildingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingCode", DbType="VarChar(255)")]
		public string BuildingCode
		{
			get
			{
				return this._BuildingCode;
			}
			set
			{
				if ((this._BuildingCode != value))
				{
					this._BuildingCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", DbType="Int NOT NULL")]
		public int BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this._BuildingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this._RoomNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlType")]
	public partial class ControlType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ControlTypeID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlTypeIDChanging(int value);
    partial void OnControlTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ControlType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ControlTypeID
		{
			get
			{
				return this._ControlTypeID;
			}
			set
			{
				if ((this._ControlTypeID != value))
				{
					this.OnControlTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ControlTypeID = value;
					this.SendPropertyChanged("ControlTypeID");
					this.OnControlTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeDesc")]
	public partial class TypeDesc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeDescID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeDescIDChanging(int value);
    partial void OnTypeDescIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TypeDesc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDescID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeDescID
		{
			get
			{
				return this._TypeDescID;
			}
			set
			{
				if ((this._TypeDescID != value))
				{
					this.OnTypeDescIDChanging(value);
					this.SendPropertyChanging();
					this._TypeDescID = value;
					this.SendPropertyChanged("TypeDescID");
					this.OnTypeDescIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classroom")]
	public partial class Classroom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoomNumber;
		
		private int _BuildingID;
		
		private System.Nullable<int> _TypeID;
		
		private int _SeatingCapacity;
		
		private System.Nullable<int> _ControlType;
		
		private System.Nullable<bool> _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnBuildingIDChanging(int value);
    partial void OnBuildingIDChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnSeatingCapacityChanging(int value);
    partial void OnSeatingCapacityChanged();
    partial void OnControlTypeChanging(System.Nullable<int> value);
    partial void OnControlTypeChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public Classroom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuildingID
		{
			get
			{
				return this._BuildingID;
			}
			set
			{
				if ((this._BuildingID != value))
				{
					this.OnBuildingIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingID = value;
					this.SendPropertyChanged("BuildingID");
					this.OnBuildingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatingCapacity", DbType="Int NOT NULL")]
		public int SeatingCapacity
		{
			get
			{
				return this._SeatingCapacity;
			}
			set
			{
				if ((this._SeatingCapacity != value))
				{
					this.OnSeatingCapacityChanging(value);
					this.SendPropertyChanging();
					this._SeatingCapacity = value;
					this.SendPropertyChanged("SeatingCapacity");
					this.OnSeatingCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlType", DbType="Int")]
		public System.Nullable<int> ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this.OnControlTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlType = value;
					this.SendPropertyChanged("ControlType");
					this.OnControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
